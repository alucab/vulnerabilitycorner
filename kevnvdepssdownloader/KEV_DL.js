//https://www.cisa.gov/known-exploited-vulnerabilities-catalog
/*
For the benefit of the cybersecurity community and network defenders—and to help every organization better manage vulnerabilities and keep pace with threat activity—CISA maintains the authoritative source of vulnerabilities that have been exploited in the wild. Organizations should use the KEV catalog as an input to their vulnerability management prioritization framework.
*/
const KEV_URL = "https://www.cisa.gov/sites/default/files/csv/known_exploited_vulnerabilities.csv"

const NAME = "KEV-"+DATE
const CSV_NAME = NAME +".csv"


/*
const arr1 = [[1,2,3],[2,3,1],[3,2,1]]
const arr2 = [[1,4,5],[2,4,5],[3,4,5]]

idx1 = _.keyBy(arr1, 0) 
idx2 = _.keyBy(arr2, 0) 

function customizer(objValue, srcValue) {
  if (_.isArray(objValue)) {
    return _.uniq(objValue.concat(srcValue));
  }
}

obj = _.mergeWith(idx1, idx2, customizer);

result = _.values(obj)
*/



function loadKEV(){

  var ub=fetchBlobFromUrl(KEV_URL);
  
  ub.setName(CSV_NAME); 
  ub.setContentTypeFromExtension();

  if (!FOLDER.getFilesByName(CSV_NAME).hasNext()){
    /* create the blob file in google drive and get its file handler object */ 
    csv_file=DriveApp.createFile(ub);
    /* print the file url for reference */
    console.log('csv_file url:',csv_file.getUrl())
    /* move the file to the parent folder */
    csv_file.moveTo(FOLDER);
  } else{
    console.log('error: csv_file already exist');
  }

  var csv = ub.getDataAsString();
  
  var KEVdata = Utilities.parseCsv(csv, ',');

  //removes the first comment
  //KEVdata.shift();
  KEVdata[0][0]="CVE"
  KEVdata[0][1]="Vendor"
  KEVdata[0][2]="Product"
  KEVdata[0][3]="Name"
  KEVdata[0][4]="Added"
  KEVdata[0][5]="Description"
  KEVdata[0][6]="Action"
  KEVdata[0][7]="Due"
  KEVdata[0][8]="RansomwareCampaign"
  KEVdata[0][9]="Notes"

  KEVSpreadSheet = SpreadsheetApp.openById(GSH_ID);
  KEVSheet = KEVSpreadSheet.getSheetByName(GSH_KEV_TAB);
  KEVSheet.clearContents();
  KEVSheet.getRange(1,1,KEVdata.length,KEVdata[0].length).setValues(KEVdata);


  return
}

function loadNVDScoresFromSheet(){
  var KEVSpreadSheet = SpreadsheetApp.openById(GSH_ID);
  var NVDSheet = KEVSpreadSheet.getSheetByName("NVD");
  var NVDScores = NVDSheet.getDataRange().getValues()
  var NVDScoresIdx ={}
  for (const row of NVDScores) {
    NVDScoresIdx[row[0]] = row;
  }

  return NVDScoresIdx
}





